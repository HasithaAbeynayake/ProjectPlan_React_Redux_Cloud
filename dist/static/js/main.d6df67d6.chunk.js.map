{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","config/fbConfig.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","res","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","console","log","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","getFirebase","createUserWithEmailAndPassword","resp","doc","set","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","timestampsInSnapshots","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d6df67d6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authActions';\r\n\r\nconst SignedInLinks = (props) => {\r\n\treturn (\r\n\t\t<ul className=\"right\">\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/create\">New Project</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<a onClick={props.signOut}>Log Out</a>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n\t\t\t\t\t{props.profile.initials}\r\n\t\t\t\t</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsignOut: () => dispatch(signOut()),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","// import { getFirebase } from 'react-redux-firebase';\r\n\r\n// export const signIn = (credentials) => {\r\n// \treturn (dispatch, getState, { getFirebase }) => {\r\n// \t\tconst firebase = getFirebase();\r\n\r\n// \t\tfirebase\r\n// \t\t\t.auth()\r\n// \t\t\t.signInWithEmailAndPassword(credentials.email, credentials.password)\r\n// \t\t\t.then(() => {\r\n// \t\t\t\tdispatch({ type: 'LOGIN_SUCCESS' });\r\n// \t\t\t})\r\n// \t\t\t.catch((err) => {\r\n// \t\t\t\tdispatch({ type: 'LOGIN_ERROR', err });\r\n// \t\t\t});\r\n// \t};\r\n// };\r\n\r\nimport firebase from 'firebase/app';\r\nimport { getFirebase } from 'react-redux-firebase';\r\n\r\nexport const signIn = (credentials) => {\r\n\treturn (dispatch, getState) => {\r\n\t\t//const firebase = getFirebase();\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signInWithEmailAndPassword(credentials.email, credentials.password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tconsole.log('INSIDE LOGIN_SUCCESS');\r\n\t\t\t\tdispatch({ type: 'LOGIN_SUCCESS' });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log('INSIDE LOGIN_ERROR');\r\n\t\t\t\tdispatch({ type: 'LOGIN_ERROR', err });\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const signOut = () => {\r\n\treturn (dispatch, getState) => {\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.signOut()\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'SIGNOUT_SUCCESS' });\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n\treturn (dispatch, getState, { getFirestore }) => {\r\n\t\tconst firestore = getFirebase().firestore();\r\n\r\n\t\tfirebase\r\n\t\t\t.auth()\r\n\t\t\t.createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n\t\t\t.then((resp) => {\r\n\t\t\t\treturn firestore\r\n\t\t\t\t\t.collection('users')\r\n\t\t\t\t\t.doc(resp.user.uid)\r\n\t\t\t\t\t.set({\r\n\t\t\t\t\t\tfirstName: newUser.firstName,\r\n\t\t\t\t\t\tlastName: newUser.lastName,\r\n\t\t\t\t\t\tinitials: newUser.firstName[0] + newUser.lastName[0],\r\n\t\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'SIGNUP_SUCCESS' });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({ type: 'SIGNUP_ERROR', err });\r\n\t\t\t});\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SignedOutLinks = () => {\r\n\treturn (\r\n\t\t<ul className=\"right\">\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/signup\">Sign Up</NavLink>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<NavLink to=\"/signin\">Log In</NavLink>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n\tconst { auth, profile } = props;\r\n\tconst links = auth.uid ? (\r\n\t\t<SignedInLinks profile={profile} />\r\n\t) : (\r\n\t\t<SignedOutLinks />\r\n\t);\r\n\treturn (\r\n\t\t<nav className=\"nav-wrapper grey darken-3\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Link to=\"/\" className=\"brand-logo\">\r\n\t\t\t\t\tProject Plan\r\n\t\t\t\t</Link>\r\n\t\t\t\t{links}\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tauth: state.firebase.auth,\r\n\t\tprofile: state.firebase.profile,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport moment from 'moment/moment';\r\n\r\nconst Notifications = (props) => {\r\n\tconst { notifications } = props;\r\n\treturn (\r\n\t\t<div className=\"section\">\r\n\t\t\t<div className=\"card z-depth-0\">\r\n\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t<span className=\"card-title\">Notifications</span>\r\n\t\t\t\t\t<ul className=\"notifications\">\r\n\t\t\t\t\t\t{notifications &&\r\n\t\t\t\t\t\t\tnotifications.map((item) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<li key={item.id}>\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"pink-text\">{item.user} </span>\r\n\t\t\t\t\t\t\t\t\t\t<span>{item.content}</span>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"grey-text note-date\">\r\n\t\t\t\t\t\t\t\t\t\t\t{moment(item.time.toDate()).fromNow()}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport moment from 'moment/moment';\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n\treturn (\r\n\t\t<div className=\"card z-depth-0 project-summary\">\r\n\t\t\t<div className=\"card-content grey-text text-darken-3\">\r\n\t\t\t\t<span className=\"card-title\">{project.title}</span>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPosted by {project.authorFirstName} {project.authorLastName}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"grey-text\">\r\n\t\t\t\t\t{moment(project.createdAt.toDate()).calendar()}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n\treturn (\r\n\t\t<div className=\"project-list section\">\r\n\t\t\t{projects &&\r\n\t\t\t\tprojects.map((res) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Link to={'/project/' + res.id} key={res.id}>\r\n\t\t\t\t\t\t\t<ProjectSummary project={res} />\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n\trender() {\r\n\t\tconst { projects, auth, notifications } = this.props;\r\n\t\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"dashboard container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col s12 m6\">\r\n\t\t\t\t\t\t<ProjectList projects={projects} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col s12 m5 offset-m1\">\r\n\t\t\t\t\t\t<Notifications notifications={notifications} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tprojects: state.firestore.ordered.projects,\r\n\t\tauth: state.firebase.auth,\r\n\t\tnotifications: state.firestore.ordered.notifications,\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps),\r\n\tfirestoreConnect([\r\n\t\t{ collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n\t\t{ collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\r\n\t])\r\n)(Dashboard);\r\n","import React from 'react';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment/moment';\r\n\r\nconst ProjectDetails = (props) => {\r\n\tconst { project, auth } = props;\r\n\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n\tif (project) {\r\n\t\treturn (\r\n\t\t\t<div className=\"container section project-details\">\r\n\t\t\t\t<div className=\"card z-depth-0\">\r\n\t\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t\t<span className=\"card-title\">Project Title: {project.title}</span>\r\n\t\t\t\t\t\t<p>{project.content}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-action grey lighten-4 grey-text\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\tPosted by {project.authorFirstName} {project.authorLastName}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className=\"container center\">\r\n\t\t\t\t<p>Loading project...</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n\tconst id = ownProps.match.params.id;\r\n\tconst projects = state.firestore.data.projects;\r\n\tconst project = projects ? projects[id] : null;\r\n\treturn {\r\n\t\tproject: project,\r\n\t\tauth: state.firebase.auth,\r\n\t};\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps),\r\n\tfirestoreConnect([{ collection: 'projects' }])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n\tstate = {\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.signIn(this.state);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { authError, auth } = this.props;\r\n\t\tif (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\">Passwaord</label>\r\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"red-text center\">\r\n\t\t\t\t\t\t{authError ? <p>{authError}</p> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tauthError: state.auth.authError,\r\n\t\tauth: state.firebase.auth,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsignIn: (creds) => dispatch(signIn(creds)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n\tstate = {\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tfirstName: '',\r\n\t\tlastName: '',\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: e.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.signUp(this.state);\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { auth, authError } = this.props;\r\n\t\tif (auth.uid) return <Redirect to=\"/\" />;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\r\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"firstName\">First Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"lastName\">Last Name</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Sign up</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"red-text center\">\r\n\t\t\t\t\t\t{authError ? <p>{authError}</p> : null}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tauth: state.firebase.auth,\r\n\t\tauthError: state.auth.authError,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsignUp: (newUser) => dispatch(signUp(newUser)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n\tapiKey: 'AIzaSyC5ut27hL4utyrU6rGmmQ_8MJc67TaWwZ4',\r\n\tauthDomain: 'projectplan-10db8.firebaseapp.com',\r\n\tdatabaseURL: 'https://projectplan-10db8.firebaseio.com',\r\n\tprojectId: 'projectplan-10db8',\r\n\tstorageBucket: 'projectplan-10db8.appspot.com',\r\n\tmessagingSenderId: '997300214731',\r\n\tappId: '1:997300214731:web:5a47de1733d0b29a4c344e',\r\n\tmeasurementId: 'G-DBD5SQWZ2J',\r\n};\r\n// Initialize Firebase\r\n// firebase.initializeApp(firebaseConfig);\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n// firebase.analytics();\r\nfirebase.firestore().settings({ timestampsInSnapshots: true });\r\n\r\nexport const firestore = firebaseApp.firestore();\r\n\r\nexport default firebase;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n\tstate = {\r\n\t\ttitle: '',\r\n\t\tcontent: '',\r\n\t};\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.id]: [e.target.value],\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.createProject(this.state);\r\n\t\tthis.props.history.push('/')\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { auth } = this.props;\r\n\t\tif (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\r\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"title\">Title</label>\r\n\t\t\t\t\t\t<input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<label htmlFor=\"content\">Project Content</label>\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tid=\"content\"\r\n\t\t\t\t\t\t\tclassName=\"materialize-textarea\"\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t></textarea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t<button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tauth: state.firebase.auth,\r\n\t};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tcreateProject: (project) => dispatch(createProject(project)),\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","import { firestore } from '../../config/fbConfig';\r\n\r\nexport const createProject = (project) => {\r\n\treturn (dispatch, getState, getFirebase, getFirestore) => {\r\n\t\t//async call to the database\r\n\r\n\t\t// const firestore = getFirestore();\r\n\t\tconst profile = getState().firebase.profile;\r\n\t\tconst authorId = getState().firebase.auth.uid;\r\n\t\tfirestore\r\n\t\t\t.collection('projects')\r\n\t\t\t.add({\r\n\t\t\t\t...project,\r\n\t\t\t\tauthorFirstName: profile.firstName,\r\n\t\t\t\tauthorLastName: profile.lastName,\r\n\t\t\t\tauthorId: authorId,\r\n\t\t\t\tcreatedAt: new Date(),\r\n\t\t\t})\r\n\t\t\t.then(() => {\r\n\t\t\t\tdispatch({ type: 'CREATE_PROJECT', project });\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tdispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n\t\t\t});\r\n\t};\r\n};\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Navbar />\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\" component={Dashboard} />\n\t\t\t\t\t\t<Route path=\"/project/:id\" component={ProjectDetails} />\n\t\t\t\t\t\t<Route path=\"/signin\" component={SignIn} />\n\t\t\t\t\t\t<Route path=\"/signup\" component={SignUp} />\n\t\t\t\t\t\t<Route path=\"/create\" component={CreateProject} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n\tauthError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'LOGIN_ERROR':\r\n\t\t\tconsole.log('Login Error');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: 'Login failed',\r\n\t\t\t};\r\n\t\tcase 'LOGIN_SUCCESS':\r\n\t\t\tconsole.log('Login Successful');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: null,\r\n\t\t\t};\r\n\t\tcase 'SIGNOUT_SUCCESS':\r\n\t\t\tconsole.log('Signout Successful');\r\n\t\t\treturn state;\r\n\t\tcase 'SIGNUP_SUCCESS':\r\n\t\t\tconsole.log('Signup Successful');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: null,\r\n\t\t\t};\r\n\t\tcase 'SIGNUP_ERROR':\r\n\t\t\tconsole.log('Signup Error');\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthError: action.err.message,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n\tprojects: [\r\n\t\t{\r\n\t\t\tid: '1',\r\n\t\t\ttitle: 'Java 8: Lambda Basics',\r\n\t\t\tcontent: 'Functional programming through Java',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: '2',\r\n\t\t\ttitle: 'React and Redux',\r\n\t\t\tcontent: 'Frontend programming through React',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: '3',\r\n\t\t\ttitle: 'New Era of Programming',\r\n\t\t\tcontent: 'Fullstack approach with devops',\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CREATE_PROJECT':\r\n\t\t\tconsole.log('Created project', action.project);\r\n\t\t\treturn state;\r\n\t\tcase 'CREATE_PROJECT_ERROR':\r\n\t\t\tconsole.log('Creatd project error', action.err);\r\n\t\t\treturn state;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default projectReducer;\r\n","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { combineReducers } from 'redux';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n\tauth: authReducer,\r\n\tproject: projectReducer,\r\n\tfirestore: firestoreReducer,\r\n\tfirebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {\n\tcreateFirestoreInstance,\n\tgetFirestore,\n\treduxFirestore,\n} from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\nimport { useSelector } from 'react-redux';\nimport { isLoaded } from 'react-redux-firebase';\n\nconst store = createStore(\n\trootReducer,\n\tcompose(\n\t\tapplyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n\t\treduxFirestore(firebase, fbConfig)\n\t)\n);\n\nconst profileSpecificProps = {\n\tuserProfile: 'users',\n\tuseFirestoreForProfile: true,\n\tenableRedirectHandling: false,\n\tresetBeforeLogin: false,\n};\n\nconst rrfProps = {\n\tfirebase,\n\tconfig: fbConfig,\n\tconfig: profileSpecificProps,\n\tdispatch: store.dispatch,\n\tcreateFirestoreInstance,\n\t// userProfile: 'users', // where profiles are stored in database\n\tpresence: 'presence', // where list of online users is stored in database\n\tsessions: 'sessions',\n};\n\nfunction AuthIsLoaded({ children }) {\n\tconst auth = useSelector((state) => state.firebase.auth);\n\tif (!isLoaded(auth)) return <div>Loading Screen...</div>;\n\treturn children;\n}\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<ReactReduxFirebaseProvider {...rrfProps}>\n\t\t\t<AuthIsLoaded>\n\t\t\t\t<App />\n\t\t\t</AuthIsLoaded>\n\t\t</ReactReduxFirebaseProvider>\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}